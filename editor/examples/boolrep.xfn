data Bool { True, False }

impl Bool {
    def Bool.not: Bool {
        True => False,
        False => True,
    }
}

data BoolRep(x: Bool) {
    TrueRep: BoolRep(True),
    FalseRep: BoolRep(False),
}

impl BoolRep {
    def BoolRep(x).extract(x: Bool): Bool {
        TrueRep => True,
        FalseRep => False,
    }
}

data Top { Unit }

impl Top {
    def Top.flipRep(x: Bool, rep: BoolRep(x)): BoolRep(x.not) {
        Unit => rep.match _ {
            TrueRep => FalseRep,
            FalseRep => TrueRep,
        }
    }

    def Top.example: Bool {
        Unit => Unit.flipRep(True, TrueRep).extract(False)
    }
}

Unit.example
